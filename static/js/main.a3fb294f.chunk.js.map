{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onSubmit","setState","handleChange","currentTarget","value","this","className","css","form","label","type","pattern","title","required","onChange","submit","Component","ContactList","contacts","onDeleteContact","allContacts","map","contact","delete","onClick","id","Filter","filter","App","addContact","normalizedName","toLowerCase","doubledNames","includes","length","Notiflix","Report","warning","shortid","generate","deleteContact","contactId","prevState","changeFilter","localStorage","getItem","parcedContacts","JSON","parse","_","setItem","stringify","normalizedFilter","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3fb294f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2zahL\",\"submit\":\"ContactForm_submit__1zaQ8\",\"label\":\"ContactForm_label__30jZa\"};","import { Component } from 'react';\r\nimport css from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.number);\r\n        this.setState({ name: '' });\r\n        this.setState({ number: '' });\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={css.form}>\r\n                <label className={ css.label}>\r\n            Name\r\n            <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            />\r\n\r\n            </label>\r\n                \r\n            <label className={ css.label}>\r\n                Number\r\n                <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={this.state.number}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={this.handleChange}\r\n                />\r\n\r\n            </label>\r\n\r\n                <button type=\"submit\" className={css.submit}>Add name</button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm","import css from './ContactList.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n\r\n    return (\r\n        <ul className={ css.allContacts}>\r\n            {contacts.map(contact => (\r\n                <li key={contact.id} className={css.contact}>\r\n                    <span>{contact.name}: {contact.number}</span>\r\n                    <button className={css.delete} type=\"button\" onClick={()=> onDeleteContact(contact.id)}>Delete</button>\r\n                </li>))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList\r\n","import PropTypes from 'prop-types'\r\n\r\nfunction Filter({ onChange, filter }) {\r\n    return (\r\n        <label>\r\n            Filter by name:\r\n            <input type=\"text\" value={filter} onChange={onChange}></input>\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string\r\n}\r\n\r\nexport default Filter","import { Component } from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport shortid from \"shortid\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Notiflix from \"notiflix\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const doubledNames = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedName)\n    ).length;\n    if (!doubledNames) {\n      const contact = {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      };\n      this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n    } else {\n      Notiflix.Report.warning(\n        \"Warning\",\n        `${name} is already in contacts`,\n        \"OK\"\n      );\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      const parcedContacts = JSON.parse(contacts);\n      this.setState({ contacts: parcedContacts });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.contacts.length !== prevState.contacts.length) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={this.name}\n          number={this.number}\n          onSubmit={this.addContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter onChange={this.changeFilter} value={this.state.filter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContacts\":\"ContactList_allContacts__3Ue0E\",\"contact\":\"ContactList_contact__12ZPD\",\"delete\":\"ContactList_delete__2OxZm\"};"],"sourceRoot":""}